# This workflow performs a static analysis of your Kotlin source code using
# Detekt.
#

name: Scan with Detekt

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
     - cron: '0 0 * * *'

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  DETEKT_RELEASE_TAG: v1.23.3

jobs:
  scan:
    name: Scan
    runs-on: ubuntu-latest

    steps:

    # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v4

    # Gets the download URL associated with the $DETEKT_RELEASE_TAG
    - name: Get Detekt download URL
      id: detekt_info
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh api graphql --field tagName=$DETEKT_RELEASE_TAG --raw-field query='
          query getReleaseAssetDownloadUrl($tagName: String!) {
            repository(name: "detekt", owner: "detekt") {
              release(tagName: $tagName) {
                releaseAssets(first: 1) {  # Hole bis zu 10 Assets, um zu debuggen
                  nodes {
                    name
                    downloadUrl
                  }
                }
                tagCommit {
                  oid
                }
              }
            }
          }
        ' > gh_response.json
        
        DETEKT_RELEASE_SHA=$(jq --raw-output '.data.repository.release.tagCommit.oid' gh_response.json)
        if [ $DETEKT_RELEASE_SHA != "2f6a52a0f6ddf3ae72f5c7c182590f9a3f4889af" ]; then
          echo "SHA=$DETEKT_RELEASE_SHA"
          echo "Release tag doesn't match expected commit SHA"
          exit 1
        fi

        DETEKT_DOWNLOAD_URL=$(jq --raw-output '.data.repository.release.releaseAssets.nodes[0].downloadUrl' gh_response.json)
        echo "download_url=$DETEKT_DOWNLOAD_URL" >> $GITHUB_OUTPUT

    # Ensure Java is installed
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'
        java-version: '17'

    # Sets up the detekt cli
    - name: Setup Detekt
      run: |
        dest=$(mktemp -d)
        curl --request GET \
          --url ${{ steps.detekt_info.outputs.download_url }} \
          --silent \
          --location \
          --output $dest/detekt-cli.jar
        echo "DETEKT_CLI_JAR=$dest/detekt-cli.jar" >> $GITHUB_ENV

    # Performs static analysis using Detekt
    - name: Run Detekt
      continue-on-error: true
      run: |
        java -jar $DETEKT_CLI_JAR \
          --input "hanoi-frontend/src","hanoi-backend/src" \
          --report sarif:${{ github.workspace }}/detekt.sarif.json \
          --report txt:${{ github.workspace }}/detekt.txt \
          --report xml:${{ github.workspace }}/detekt.xml \
          --report html:${{ github.workspace }}/detekt.html \
          --config config/detekt/detekt.yml
    
    # Uploads the Detekt reports as artifacts
    - uses: actions/upload-artifact@v4
      with:
        name: detekt-reports
        path: |
          ${{ github.workspace }}/detekt.sarif.json
          ${{ github.workspace }}/detekt.xml
          ${{ github.workspace }}/detekt.html
          ${{ github.workspace }}/detekt.txt
    
    # Uploads the Detekt SARIF report to GitHub
    - name: Upload SARIF report to GitHub
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ github.workspace }}/detekt.sarif.json
